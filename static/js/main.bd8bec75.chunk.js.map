{"version":3,"sources":["components/SongList.jsx","actions/index.js","components/SongDetails.jsx","components/App.jsx","reducers/index.js","index.js"],"names":["connect","state","console","log","songs","songSelector","song","type","payload","props","selectedSong","className","map","key","title","onClick","class","duration","App","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","getElementById"],"mappings":"qMA+BeA,eAJS,SAAAC,GAEtB,OADAC,QAAQC,IAAIF,GACL,CAAEG,MAAOH,EAAMG,SAEgB,CAAEC,aC/Bd,SAAAC,GAC1B,MAAO,CACLC,KAAM,gBACNC,QAASF,KD4BEN,EA3BE,SAAAS,GAEf,OADAP,QAAQC,IAAIM,EAAMC,cAEhB,6BACE,wBAAIC,UAAU,cACXF,EAAML,MAAMQ,KAAI,SAAAN,GACf,OACE,wBAAIO,IAAKP,EAAKQ,MAAOH,UAAU,mBAC7B,8BAAOL,EAAKQ,OACZ,4BACEC,QAAS,kBAAMN,EAAMJ,aAAaC,IAClCK,UAAU,sCAFZ,mBEeCX,mBAJf,SAAyBC,GACvB,MAAO,CAAEK,KAAML,EAAMS,gBAGRV,EAzBK,SAAC,GAAc,IAAZM,EAAW,EAAXA,KACrB,OAAIA,EAEA,yBAAKK,UAAU,kBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,eACb,6CAEF,yBAAKK,MAAM,aACT,wBAAIA,MAAM,cAAcV,EAAKQ,OAC7B,uBAAGE,MAAM,aAAT,cAAiCV,EAAKW,SAAtC,aAEF,yBAAKD,MAAM,0BAAX,gBAKC,sDCKIE,EAtBH,WACV,OACE,oCACE,yBAAKP,UAAU,cACb,wBAAIA,UAAU,mCAAd,kCAIA,yBAAKA,UAAU,QACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,MACA,8BAEF,yBAAKA,UAAU,YACb,kBAAC,EAAD,W,OCCGQ,cAAgB,CAC7Bf,MAjBkB,WAClB,MAAO,CACL,CAAEU,MAAO,+BAAgCG,SAAU,KACnD,CAAEH,MAAO,8BAA+BG,SAAU,KAClD,CAAEH,MAAO,6BAA8BG,SAAU,KACjD,CAAEH,MAAO,sDAAkDG,SAAU,OAavEP,aAT0B,WAAkC,IAAjCA,EAAgC,uDAAjB,KAAMU,EAAW,uCAC3D,MAAoB,kBAAhBA,EAAOb,KACFa,EAAOZ,QAETE,KCRTW,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IAC3B,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.bd8bec75.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { songSelector } from \"../actions\";\r\n\r\nconst SongList = props => {\r\n  console.log(props.selectedSong);\r\n  return (\r\n    <div>\r\n      <ul className=\"list-group\">\r\n        {props.songs.map(song => {\r\n          return (\r\n            <li key={song.title} className=\"list-group-item\">\r\n              <span>{song.title}</span>\r\n              <button\r\n                onClick={() => props.songSelector(song)}\r\n                className=\"btn btn-md btn-primary float-right\"\r\n              >\r\n                Select\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return { songs: state.songs };\r\n};\r\nexport default connect(mapStateToProps, { songSelector })(SongList);\r\n","export const songSelector = song => {\r\n  return {\r\n    type: \"SONG_SELECTED\",\r\n    payload: song\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SongDetails = ({ song }) => {\r\n  if (song) {\r\n    return (\r\n      <div className=\"col-md-12 p-0 \">\r\n        <div className=\"card text-center\">\r\n          <div className=\"card-header\">\r\n            <h3>Song Details</h3>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <h4 class=\"card-title\">{song.title}</h4>\r\n            <p class=\"card-text\">Duration : {song.duration} minutes</p>\r\n          </div>\r\n          <div class=\"card-footer text-muted\">2 days ago</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <h1>No Song is Selected</h1>;\r\n  }\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return { song: state.selectedSong };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SongDetails);\r\n","import React from \"react\";\r\nimport SongList from \"./SongList\";\r\nimport SongDetails from \"./SongDetails\";\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <div className=\"container \">\r\n        <h1 className=\"text-center p-3 border rounded \">\r\n          React Redux Demo Project(mini)\r\n        </h1>\r\n\r\n        <div className=\"row \">\r\n          <div className=\"col-md-6\">\r\n            <SongList />\r\n            <br />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <SongDetails />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\n\r\nconst songReducer = () => {\r\n  return [\r\n    { title: \"Rapture by Koffee ft. Govana\", duration: \"2\" },\r\n    { title: \"Don't Start Now by Dua Lipa\", duration: \"4\" },\r\n    { title: \"All To Myself by Baby Rose\", duration: \"3\" },\r\n    { title: \"See You Again” by Wiz Knalifa ft. Charlie Puth\", duration: \"4\" }\r\n  ];\r\n};\r\n\r\nconst selectedSongReducer = (selectedSong = null, action) => {\r\n  if (action.type === \"SONG_SELECTED\") {\r\n    return action.payload;\r\n  }\r\n  return selectedSong;\r\n};\r\n\r\nexport default combineReducers({\r\n  songs: songReducer,\r\n  selectedSong: selectedSongReducer\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport reducers from \"./reducers\";\r\n\r\nReactDOM.render(\r\n  <Provider store={createStore(reducers)}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}